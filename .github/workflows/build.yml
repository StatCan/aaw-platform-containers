# This workflow will build a docker container, publish it to Azure Container Registry, and deploy it to Azure Kubernetes Service using a helm chart.
#
# https://github.com/Azure/actions-workflow-samples/tree/master/Kubernetes
#
# To configure this workflow:
#
# 1. Set up the following secrets in your workspace:
#     a. REGISTRY_USERNAME with ACR username
#     b. REGISTRY_PASSWORD with ACR Password
#     c. AZURE_CREDENTIALS with the output of `az ad sp create-for-rbac --sdk-auth`
#
# 2. Change the values for the REGISTRY_NAME, CLUSTER_NAME, CLUSTER_RESOURCE_GROUP and NAMESPACE environment variables (below).
name: build
on: [pull_request]

# Environment variables available to all jobs and steps in this workflow
jobs:
  listimages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@main
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"image\":[$(ls -d */ | sed 's~\(.*\)/$~\"\1\"~g' | paste -sd ',')]}"
  build:
    needs: listimages
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.listimages.outputs.matrix)}}
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    - uses: actions/checkout@main

    # Container build and push to a Azure Container registry (ACR)
    - run: |
        docker build -f ${{ matrix.image }}/Dockerfile -t localhost:5000/${{ matrix.image }}:${{ github.sha }} ${{ matrix.image }}
        docker push localhost:5000/${{ matrix.image }}:${{ github.sha }}
        docker rmi localhost:5000/${{ matrix.image }}:${{ github.sha }}
        docker image prune

    # Scan image for vulnerabilities
    - uses: Azure/container-scan@v0
      with:
        image-name: localhost:5000/${{ matrix.image }}:${{ github.sha }}
        severity-threshold: CRITICAL
        run-quality-checks: false
